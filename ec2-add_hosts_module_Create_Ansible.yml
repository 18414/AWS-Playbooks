---
- name: Launch ec2 instance
  hosts: localhost
  become: true
  vars_files: 
    - /home/ansible/AWS-Playbooks/keys.yml
  tasks: 
    - name: Create keypair
      ec2_key: 
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        name: reyu-key
        state: present
        key_material: "{{ lookup('file', '/home/ansible/.ssh/id_rsa.pub') }}"  
 
    - name: Launch EC2 instance
      ec2: 
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        key_name: reyu-key
        image: ami-0b69ea66ff7391e80
        assign_public_ip: yes
        wait: yes
        count: 1   
        instance_type: t2.micro
        vpc_subnet_id: subnet-0bae8625
        group: ASGSG
        #instance_tags:
     #  app: Kube-master
      register: ec2

    - debug: msg={{ ec2.instances }}

      
    - name: Tag ec2 instance
      ec2_tag:
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        resource: "{{ item.id }}" 
        state: present
        tags:
          Name: Master
          env: kube
      with_items: "{{ ec2.instances }}"

    - name: Create SSH Group to login dynamically to EC2 Instance
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: webgroup 
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
      loop: "{{ ec2.instances }}"
   
    - name: Wait for SSH to come up 
      local_action: wait_for
                    host={{ item.public_ip }}
                    port=22
                    state=started
      with_items: "{{ ec2.instances }}"

- name: Create user on newly server
  hosts: webgroup
  remote_user: ec2-user
  become: yes
  tasks:  
    - name: Create an user 
      user: 
        name: ansible 
        state: present
        generate_ssh_key: yes
      register: nuser

    - name: Give sudo access to user
      lineinfile: 
        path: /etc/sudoers
        regexp: "^root"
        line: "ansible ALL=(ALL) NOPASSWD: ALL"          
    
    - name: Send key to the remote server
      authorized_key: 
        user: ansible    
        manage_dir: true
        key: "{{ lookup('file', '/home/ansible/.ssh/id_rsa.pub') }}"
        state: present
#NOTE: Login as ec2-user on remote server
#Example: ssh ec2-user@IP
