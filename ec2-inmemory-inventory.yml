---
- name: Launch ec2 instance
  hosts: localhost
  become: true
  vars_files: 
    - /home/ansible/AWS-Playbooks/keys.yml
  vars_prompt: 
    - name: imageid
      prompt: "Please enter the AMI ID [ami-0015b9ef68c77328d - CentOS7 community work] [ami-00dc04f083786bd2d - CentOS 8 LEMP Stack community] [ ami-0e7ad70170b787201 - CentOS8 market] [Red Hat 8 (RHEL 8) LAMP Stack - ami-0d636a38454c48317 ] [ami-04763b3055de4860b - Ubuntu Server 16.04 LTS]"
      private: no

    - name: remoteu 
      prompt: "kindly provide the remote_user name like ubuntu ec2-user & centos according AMI"
      private: no

  tasks: 
    - name: Create keypair
      ec2_key: 
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        name: bny1
        state: present
      register: ec2keyvar

    - debug: msg={{ ec2keyvar }}

    - name: Save private key
      lineinfile:  
        create: yes
        path: /home/ansible/aws.pem 
        line: "{{ ec2keyvar.key.private_key }}"
        mode: 0600
        owner: ansible
        group: ansible
      when: ec2keyvar.changed

 
    - name: Launch EC2 instance
      ec2: 
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        key_name: bny1
        image: "{{ imageid }}"  
        assign_public_ip: yes
        wait: yes
        count: 1
        instance_type: t2.micro
        vpc_subnet_id: subnet-0bae8625
        group: ASGSG
      register: ec2

    - debug: msg={{ ec2.instances }}

      
    - name: Tag ec2 instance
      ec2_tag:
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        resource: "{{ item.id }}" 
        state: present
        tags:
          Name: Master
          env: kubernetes
      with_items: "{{ ec2.instances }}"

    - name: Create SSH Group to login dynamically to EC2 Instance 
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: webgroup 
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
        ansible_ssh_private_key_file: /home/ansible/aws.pem
        ansible_user: "{{ remoteu }}" 
      loop: "{{ ec2.instances }}"

  
    - name: Wait for SSH to come up 
      local_action: wait_for
                    host={{ item.public_ip }}
                    port=22
                    state=started
      with_items: "{{ ec2.instances }}"

- name: Create user on newly server
  hosts: webgroup
  become: yes
  tasks:
    - name: Create an user
      user:
        name: ansible
        state: present
        generate_ssh_key: yes
      register: nuser

    - name: Give sudo access to user
      lineinfile:
        path: /etc/sudoers
        regexp: "^root"
        line: "ansible ALL=(ALL) NOPASSWD: ALL"

    - name: Send key to the remote server
      authorized_key:
        user: ansible
        manage_dir: true
        key: "{{ lookup('file', '/home/ansible/.ssh/id_rsa.pub') }}"
        state: present

